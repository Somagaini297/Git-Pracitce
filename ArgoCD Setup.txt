----------------------------------------------------------Argocd Setup on t2medium instance-------------------------------


Step1) First Create an t2.medium instance and install minikube with below commands

Step2) Login into ec2 instance: ssh -i Downloads/practicekey.pem ec2-user@3.84.239.13

Step3) Run Below commands to install minikube

curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
sudo install minikube-linux-amd64 /usr/local/bin/minikube

minikube start

minikube status

Step4) Install kubectl with below commands


Step5) Create a namespace with argocd

kubectl create namespace argocd
kubectl apply -n argocd -f https://raw.githubusercontent.com/argoproj/argo-cd/stable/manifests/install.yaml

kubectl get pods -n argocd 

NAME                                                READY   STATUS    RESTARTS   AGE
argocd-application-controller-0                     1/1     Running   0          6m24s
argocd-applicationset-controller-787bfd9669-2hp2c   1/1     Running   0          6m25s
argocd-dex-server-bb76f899c-tkpnt                   1/1     Running   0          6m24s
argocd-notifications-controller-5557f7bb5b-hzzwb    1/1     Running   0          6m24s
argocd-redis-b5d6bf5f5-lr8kc                        1/1     Running   0          6m24s
argocd-repo-server-56998dcf9c-m47px                 1/1     Running   0          6m24s
argocd-server-5985b6cf6f-9xdhk                      1/1     Running   0          6m24s

kubectl get svc -n argocd

NAME                                      TYPE        CLUSTER-IP       EXTERNAL-IP   PORT(S)                      AGE
argocd-applicationset-controller          ClusterIP   10.101.65.97     <none>        7000/TCP,8080/TCP            6m11s
argocd-dex-server                         ClusterIP   10.108.129.108   <none>        5556/TCP,5557/TCP,5558/TCP   6m11s
argocd-metrics                            ClusterIP   10.111.224.175   <none>        8082/TCP                     6m11s
argocd-notifications-controller-metrics   ClusterIP   10.102.247.240   <none>        9001/TCP                     6m11s
argocd-redis                              ClusterIP   10.106.136.120   <none>        6379/TCP                     6m11s
argocd-repo-server                        ClusterIP   10.100.162.76    <none>        8081/TCP,8084/TCP            6m11s
argocd-server                             ClusterIP   10.109.229.247   <none>        80/TCP,443/TCP               6m11s
argocd-server-metrics                     ClusterIP   10.108.80.255    <none>        8083/TCP                     6m11s

Step 6) Expose the argocd-server service type from ClusterIP to Nodeport

kubectl edit svc -n argocd argocd-server

type: NodePort

Step7) Creating portwarding or tunneling (We have to see for eks-cluser)


[jagaadmin@ip-172-31-60-92 ~]$ minikube service list -n argocd

[jagaadmin@ip-172-31-60-92 ~]$ minikube service argocd-server -n argocd
|-----------|---------------|-------------|---------------------------|
| NAMESPACE |     NAME      | TARGET PORT |            URL            |
|-----------|---------------|-------------|---------------------------|
| argocd    | argocd-server | http/80     | http://192.168.49.2:31971 |
|           |               | https/443   | http://192.168.49.2:30552 |
|-----------|---------------|-------------|---------------------------|
[argocd argocd-server http/80
https/443 http://192.168.49.2:31971
http://192.168.49.2:30552]

By using above those we can access argocd ---> Its not wrking then do portforwarding

kubectl port-forward svc/argocd-server -n argocd 8080:443